{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","WelcomeScreen.jsx","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","summary","start","dateTime","timeZone","end","location","Button","variant","onClick","description","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","WelcomeScreen","showWelcomeScreen","align","class","src","alt","getAccessToken","rel","href","mockData","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","extractLocations","Set","getEvents","NProgress","startsWith","navigator","onLine","getItem","done","console","log","JSON","parse","token","url","axios","get","data","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","eventCount","shownEvents","slice","updateEventsNumber","newValue","parseInt","mounted","isTokenValid","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.44a6fa10.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Button} from 'react-bootstrap';\r\n\r\n\r\nclass Event extends Component {\r\n    \r\n    state = {\r\n        collapsed: true,\r\n    };\r\n\r\n    handleClick = () => {\r\n        if (this.state.collapsed === true) {\r\n            this.setState({ collapsed: false });\r\n            } else {\r\n                this.setState({ collapsed: true});\r\n            }\r\n    };\r\n\r\n    render() {\r\n    const { event } = this.props;\r\n    return (\r\n        <div className=\"event\">\r\n            <h2 className=\"summary\">{event.summary}</h2>\r\n            <p className=\"start-date\">\r\n                {event.start.dateTime} ({event.start.timeZone})\r\n            </p><p className=\"end-date\">\r\n                {event.end.dateTime} ({event.end.timeZone})\r\n            </p>\r\n            <p className=\"location\">\r\n                {event.location}\r\n            </p>\r\n\r\n            <Button variant=\"primary\" className=\"toggle-details\" onClick={this.handleClick}>\r\n                Toggle details\r\n            </Button>\r\n            {this.state.collapsed === false && (\r\n                    <p className=\"info-details\">{event.description}</p>\r\n            )}\r\n\r\n        </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default Event;","import React, {Component} from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const {events} = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, {Component} from \"react\";\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'orange';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nexport {InfoAlert, WarningAlert, ErrorAlert};","import React, {Component} from 'react';\r\nimport {InfoAlert} from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    \r\n    \r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined,\r\n        infoText: ''\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We cannot find the city you are looking for. Please try another city',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions: [],\r\n                showSuggestions: false,\r\n                infoText: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                \r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    placeholder=\"e.g. Berlin\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => {this.setState({showSuggestions: true}) }}\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: {display: 'none'}}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li \r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n                <InfoAlert text={this.state.infoText} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, {Component} from 'react';\r\nimport {ErrorAlert} from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        numberOfEvents: 32,\r\n        infoText: '',\r\n    }\r\n    \r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        if ((value <= 0) || (value > 32)) {\r\n            this.setState({\r\n                infoText: 'Select number from 1 to 32',\r\n            });\r\n        } else {\r\n            this.setState({\r\n                numberOfEvents: value,\r\n                infoText: '',\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <div className=\"numberOfEvents\">\r\n            <input\r\n                    type=\"number\"\r\n                    className=\"event-num\"\r\n                    value={this.state.numberOfEvents}\r\n                    onChange={this.handleInputChanged}\r\n            />\r\n                \r\n            <ErrorAlert text={this.state.infoText} />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","import React from \"react\"; \r\nimport './WelcomeScreen.css'; \r\n\r\nfunction WelcomeScreen(props) { \r\n    return props.showWelcomeScreen ? \r\n    ( \r\n        <div className=\"WelcomeScreen\"> \r\n            <h1>Welcome to the Meet app</h1> \r\n            <h4> Log in to see upcoming events around the world for full-stack developers </h4> \r\n            <div className=\"button_cont\" align=\"center\"> \r\n                <div class=\"google-btn\"> \r\n                    <div class=\"google-icon-wrapper\"> \r\n                        <img class=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"Google sign-in\" /> \r\n                    </div> \r\n                    <button onClick={() => { props.getAccessToken() }} rel=\"nofollow noopener\" class=\"btn-text\" > \r\n                        <b>Sign in with google</b> \r\n                    </button>\r\n                </div> \r\n            </div> \r\n            <a href=\"https://farizhaam.github.io/meet/privacy.html\" rel=\"nofollow noopener\">Privacy policy </a> \r\n        </div> \r\n    ) : null \r\n} \r\n\r\nexport default WelcomeScreen; ","const mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"organizer\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"start\": {\r\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n         \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n         \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n       },\r\n       {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"organizer\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"start\": {\r\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n         \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n         \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n       }\r\n]\r\n\r\nexport {mockData};","/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nimport { mockData } from \"./mock-data\";\r\nimport './nprogress.css';\r\n\r\n//defining checkToken to check for a token\r\nexport const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n\r\n//defining removeQuery\r\nconst removeQuery = () => {\r\n    if(window.history.pushState && window.location.pathname) {\r\n        var newurl = \r\n            window.location.protocol +\r\n            \"//\" + \r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl)\r\n    }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const {access_token} = await fetch(\r\n        `https://9peepl53nb.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n    )\r\n    .then((res) => {return res.json()})\r\n    .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n}\r\n\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        return mockData;\r\n    }\r\n\r\n    if (!navigator.onLine) {\r\n        const events = localStorage.getItem(\"lastEvents\");\r\n        NProgress.done();\r\n        console.log(events);\r\n        return events ? JSON.parse(events).events : [];\r\n    };\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token){\r\n        removeQuery();\r\n        const url = `https://9peepl53nb.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://9peepl53nb.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const {authUrl} = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n} ","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport {WarningAlert} from './Alert';\r\nimport WelcomeScreen from './WelcomeScreen';\r\nimport {getEvents, extractLocations, checkToken, getAccessToken} from './api';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    currentLocation: \"all\",\r\n    numberOfEvents: 32, \r\n    showWelcomeScreen: undefined\r\n  }\r\n\r\n  async componentDidMount() { \r\n    this.mounted = true; \r\n    const accessToken = localStorage.getItem('access_token'); \r\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true; \r\n    const searchParams = new URLSearchParams(window.location.search); \r\n    const code = searchParams.get(\"code\"); \r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) }); \r\n    if ((code || isTokenValid) && this.mounted) { \r\n      getEvents().then((events) => { \r\n        if (this.mounted) { \r\n          this.setState({events, locations: extractLocations(events)}); \r\n        } \r\n        // if (!navigator.onLine) {\r\n        //   this.setState({\r\n        //     warningText: 'Network error, the events you are viewing may be out of date. To make sure you are viewing the latest information, make sure you are connected to the internet'\r\n        //   });\r\n        //   console.log(\"offline mode\");\r\n        // } else {\r\n        //   this.setState({ warningText: '' });\r\n        // };\r\n      }); \r\n    } \r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n      getEvents().then((events) => {\r\n        const locationEvents = (location === 'all') ? \r\n          events :\r\n          events.filter((event) => event.location === location);\r\n        \r\n          const shownEvents = locationEvents.slice(0, eventCount);\r\n\r\n        this.setState({\r\n          events: shownEvents,\r\n          currentLocation: location\r\n        });\r\n      });\r\n    }\r\n\r\n  updateEventsNumber = (eventCount) => {\r\n    const newValue = parseInt(eventCount.target.value);\r\n\r\n    this.setState({\r\n      numberOfEvents: newValue\r\n    });\r\n    this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.showWelcomeScreen === undefined) return <div className=\"App\" />\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"app-title\">Meet App</h1>\r\n        <h4 className=\"choose-city\">Choose your nearest city</h4>\r\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents}/>\r\n        <p className=\"event-numbers\">Number of events to display</p>\r\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEventsNumber={this.updateEventsNumber}/>\r\n        <EventList events={this.state.events}/>\r\n        {/* <WarningAlert text={this.state.warningText} /> */}\r\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} getAccessToken={() => {getAccessToken()}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as atatus from 'atatus-spa';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\natatus.config('a63b9ddff7b8476ead054b3ad405cc81').install();"],"sourceRoot":""}