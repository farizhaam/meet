{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","summary","start","dateTime","timeZone","end","location","Button","variant","onClick","description","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","mockData","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","extractLocations","Set","getEvents","NProgress","href","startsWith","getAccessToken","token","url","axios","get","data","JSON","stringify","done","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","eventCount","shownEvents","slice","updateEventsNumber","newValue","parseInt","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.9eb6672f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Button} from 'react-bootstrap';\r\n\r\n\r\nclass Event extends Component {\r\n    \r\n    state = {\r\n        collapsed: true,\r\n    };\r\n\r\n    handleClick = () => {\r\n        if (this.state.collapsed === true) {\r\n            this.setState({ collapsed: false });\r\n            } else {\r\n                this.setState({ collapsed: true});\r\n            }\r\n    };\r\n\r\n    render() {\r\n    const { event } = this.props;\r\n    return (\r\n        <div className=\"event\">\r\n            <h2 className=\"summary\">{event.summary}</h2>\r\n            <p className=\"start-date\">\r\n                {event.start.dateTime} ({event.start.timeZone})\r\n            </p><p className=\"end-date\">\r\n                {event.end.dateTime} ({event.end.timeZone})\r\n            </p>\r\n            <p className=\"location\">\r\n                {event.location}\r\n            </p>\r\n\r\n            <Button variant=\"primary\" className=\"toggle-details\" onClick={this.handleClick}>\r\n                Toggle details\r\n            </Button>\r\n            {this.state.collapsed === false && (\r\n                    <p className=\"info-details\">{event.description}</p>\r\n            )}\r\n\r\n        </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default Event;","import React, {Component} from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const {events} = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, {Component} from \"react\";\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'orange';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nexport {InfoAlert, WarningAlert, ErrorAlert};","import React, {Component} from 'react';\r\nimport {InfoAlert} from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    \r\n    \r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined,\r\n        infoText: ''\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We cannot find the city you are looking for. Please try another city',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions: [],\r\n                showSuggestions: false,\r\n                infoText: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <InfoAlert text={this.state.infoText} />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    placeholder=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => {this.setState({showSuggestions: true}) }}\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: {display: 'none'}}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li \r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, {Component} from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        numberOfEvents: 32\r\n    }\r\n    \r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            numberOfEvents: value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <div className=\"numberOfEvents\">\r\n            <input\r\n                    type=\"number\"\r\n                    className=\"event-num\"\r\n                    value={this.state.numberOfEvents}\r\n                    onChange={this.handleInputChanged}\r\n                />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"organizer\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"start\": {\r\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n         \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n         \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n       },\r\n       {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"organizer\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"start\": {\r\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n         \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n         \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n       }\r\n]\r\n\r\nexport {mockData};","/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nimport { mockData } from \"./mock-data\";\r\nimport './nprogress.css';\r\n\r\n//defining checkToken to check for a token\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n\r\n//defining removeQuery\r\nconst removeQuery = () => {\r\n    if(window.history.pushState && window.location.pathname) {\r\n        var newurl = \r\n            window.location.protocol +\r\n            \"//\" + \r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl)\r\n    }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const {access_token} = await fetch(\r\n        `https://9peepl53nb.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n    )\r\n    .then((res) => {return res.json()})\r\n    .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n}\r\n\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        return mockData;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token){\r\n        removeQuery();\r\n        const url = `https://9peepl53nb.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://9peepl53nb.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const {authUrl} = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n} ","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport {getEvents, extractLocations} from './api';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    currentLocation: \"all\",\r\n    numberOfEvents: 32\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if(this.mounted) {\r\n        this.setState({events, locations: extractLocations(events)});\r\n      }\r\n    });\r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n      getEvents().then((events) => {\r\n        const locationEvents = (location === 'all') ? \r\n          events :\r\n          events.filter((event) => event.location === location);\r\n        \r\n          const shownEvents = locationEvents.slice(0, eventCount);\r\n\r\n        this.setState({\r\n          events: shownEvents,\r\n          currentLocation: location\r\n        });\r\n      });\r\n    }\r\n\r\n  updateEventsNumber = (eventCount) => {\r\n    const newValue = parseInt(eventCount.target.value);\r\n\r\n    this.setState({\r\n      numberOfEvents: newValue\r\n    });\r\n    this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"app-title\">Meet App</h1>\r\n        <h4 className=\"choose-city\">Choose your nearest city</h4>\r\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents}/>\r\n        <p className=\"event-numbers\">Number of events to display</p>\r\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEventsNumber={this.updateEventsNumber}/>\r\n        <EventList events={this.state.events}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}